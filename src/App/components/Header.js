import React, { useEffect, useState } from 'react'
import { Link } from 'react-router-dom'
import { ProfilImg } from '../../Website/Home'
import { db } from '../database/firebase'
import { useStateValue } from './StateProvider'



export default function Header() {


    const [{user}] = useStateValue()

    const [getUsers, setgetUsers] = useState([])

    useEffect(e=> {
        db.collection('users').onSnapshot(snapshot => {
            setgetUsers(snapshot.docs.map(doc => doc.data()))
        })
    }, [])

    function getUser() {
        for (const v in getUsers) {
            if (getUsers[v].email === user?.email) return getUsers[v]
        }
    }
    const USER = getUser()


    const [Menu, setMenu] = useState(false)


    const menu = [
        {
            name: 'Acceuil',
            link: '/',
        },
        {
            name: 'Se connecter',
            link: '/login',
        },
        {
            name: 'CrÃ©er un lien',
            link: '/dashboard',
        },
        {
            name: 'Link in bio',
            link: '/dashboard',
        },
        {
            name: 'Pricing',
            link: '/pricing',
        }
        ,
        {
            name: 'Terms',
            link: '/terms',
        }
    ]


    useEffect(e=> {

        window.onclick = e => {
            if (!e.target.closest('header')) setMenu(false)
        }

    }, [Menu])

    
    return (
        <header className='shadow border-r-2 p-1 border m-b-2 m-t-1 transition'>
            <div className='align-top display justify-s-b'>
                <div className='display gap click'>

                    <Link to='/'>
                        <svg width="166" height="40" viewBox="0 0 610 200" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M218.624 130V65.76H227.072V130H218.624ZM212.112 72.448V65.76H227.072V72.448H212.112ZM264.924 131.584C260.817 131.584 257.209 130.88 254.1 129.472C250.99 128.064 248.35 126.216 246.18 123.928C244.068 121.581 242.454 118.971 241.34 116.096C240.284 113.221 239.756 110.288 239.756 107.296V105.712C239.756 102.72 240.313 99.7867 241.428 96.912C242.542 93.9787 244.185 91.368 246.356 89.08C248.526 86.7333 251.166 84.8853 254.276 83.536C257.385 82.128 260.934 81.424 264.924 81.424C268.913 81.424 272.462 82.128 275.572 83.536C278.681 84.8853 281.321 86.7333 283.492 89.08C285.662 91.368 287.305 93.9787 288.42 96.912C289.534 99.7867 290.092 102.72 290.092 105.712V107.296C290.092 110.288 289.534 113.221 288.42 116.096C287.364 118.971 285.75 121.581 283.58 123.928C281.468 126.216 278.857 128.064 275.748 129.472C272.638 130.88 269.03 131.584 264.924 131.584ZM264.924 124.016C268.444 124.016 271.436 123.253 273.9 121.728C276.422 120.144 278.329 118.032 279.62 115.392C280.969 112.752 281.644 109.789 281.644 106.504C281.644 103.16 280.969 100.168 279.62 97.528C278.27 94.888 276.334 92.8053 273.812 91.28C271.348 89.7547 268.385 88.992 264.924 88.992C261.521 88.992 258.558 89.7547 256.036 91.28C253.513 92.8053 251.577 94.888 250.228 97.528C248.878 100.168 248.204 103.16 248.204 106.504C248.204 109.789 248.849 112.752 250.14 115.392C251.489 118.032 253.396 120.144 255.86 121.728C258.382 123.253 261.404 124.016 264.924 124.016ZM324.392 131.584C320.286 131.584 316.678 130.88 313.568 129.472C310.459 128.064 307.819 126.216 305.648 123.928C303.536 121.581 301.923 118.971 300.808 116.096C299.752 113.221 299.224 110.288 299.224 107.296V105.712C299.224 102.72 299.782 99.7867 300.896 96.912C302.011 93.9787 303.654 91.368 305.824 89.08C307.995 86.7333 310.635 84.8853 313.744 83.536C316.854 82.128 320.403 81.424 324.392 81.424C328.382 81.424 331.931 82.128 335.04 83.536C338.15 84.8853 340.79 86.7333 342.96 89.08C345.131 91.368 346.774 93.9787 347.888 96.912C349.003 99.7867 349.56 102.72 349.56 105.712V107.296C349.56 110.288 349.003 113.221 347.888 116.096C346.832 118.971 345.219 121.581 343.048 123.928C340.936 126.216 338.326 128.064 335.216 129.472C332.107 130.88 328.499 131.584 324.392 131.584ZM324.392 124.016C327.912 124.016 330.904 123.253 333.368 121.728C335.891 120.144 337.798 118.032 339.088 115.392C340.438 112.752 341.112 109.789 341.112 106.504C341.112 103.16 340.438 100.168 339.088 97.528C337.739 94.888 335.803 92.8053 333.28 91.28C330.816 89.7547 327.854 88.992 324.392 88.992C320.99 88.992 318.027 89.7547 315.504 91.28C312.982 92.8053 311.046 94.888 309.696 97.528C308.347 100.168 307.672 103.16 307.672 106.504C307.672 109.789 308.318 112.752 309.608 115.392C310.958 118.032 312.864 120.144 315.328 121.728C317.851 123.253 320.872 124.016 324.392 124.016ZM362.213 147.6V83.008H368.901V103.336L367.317 103.16C367.611 98.1147 368.667 94.008 370.485 90.84C372.363 87.6133 374.797 85.2373 377.789 83.712C380.781 82.1867 384.037 81.424 387.557 81.424C390.96 81.424 394.04 82.0693 396.797 83.36C399.613 84.6507 402.019 86.4107 404.013 88.64C406.008 90.8693 407.533 93.4507 408.589 96.384C409.645 99.3173 410.173 102.427 410.173 105.712V107.296C410.173 110.581 409.616 113.691 408.501 116.624C407.387 119.557 405.803 122.139 403.749 124.368C401.755 126.597 399.349 128.357 396.533 129.648C393.776 130.939 390.725 131.584 387.381 131.584C384.037 131.584 380.84 130.851 377.789 129.384C374.739 127.917 372.216 125.541 370.221 122.256C368.227 118.971 367.083 114.659 366.789 109.32L370.661 116.36V147.6H362.213ZM386.061 124.192C389.229 124.192 391.987 123.459 394.333 121.992C396.68 120.467 398.499 118.384 399.789 115.744C401.08 113.045 401.725 109.965 401.725 106.504C401.725 102.984 401.08 99.904 399.789 97.264C398.499 94.624 396.68 92.5707 394.333 91.104C391.987 89.5787 389.229 88.816 386.061 88.816C383.245 88.816 380.635 89.4613 378.229 90.752C375.824 91.984 373.888 93.8027 372.421 96.208C371.013 98.5547 370.309 101.4 370.309 104.744V108.792C370.309 112.019 371.043 114.776 372.509 117.064C373.976 119.352 375.912 121.112 378.317 122.344C380.723 123.576 383.304 124.192 386.061 124.192ZM420.01 130V119.264H430.218V130H420.01ZM444.713 130V83.008H451.401V103.16H450.345C450.345 98.584 450.932 94.712 452.105 91.544C453.337 88.3173 455.156 85.8533 457.561 84.152C459.967 82.4507 463.017 81.6 466.713 81.6H467.065C470.761 81.6 473.812 82.4507 476.217 84.152C478.681 85.8533 480.5 88.3173 481.673 91.544C482.847 94.712 483.433 98.584 483.433 103.16H480.969C480.969 98.584 481.585 94.712 482.817 91.544C484.049 88.3173 485.868 85.8533 488.273 84.152C490.737 82.4507 493.817 81.6 497.513 81.6H497.865C501.561 81.6 504.641 82.4507 507.105 84.152C509.569 85.8533 511.388 88.3173 512.561 91.544C513.793 94.712 514.409 98.584 514.409 103.16V130H505.961V101.312C505.961 97.4987 505.023 94.5653 503.145 92.512C501.268 90.4 498.657 89.344 495.313 89.344C491.852 89.344 489.065 90.4587 486.953 92.688C484.841 94.8587 483.785 97.9093 483.785 101.84V130H475.337V101.312C475.337 97.4987 474.399 94.5653 472.521 92.512C470.644 90.4 468.033 89.344 464.689 89.344C461.228 89.344 458.441 90.4587 456.329 92.688C454.217 94.8587 453.161 97.9093 453.161 101.84V130H444.713ZM549.853 131.584C545.747 131.584 542.197 130.88 539.205 129.472C536.213 128.064 533.779 126.216 531.901 123.928C530.024 121.581 528.616 118.971 527.677 116.096C526.797 113.221 526.357 110.288 526.357 107.296V105.712C526.357 102.661 526.797 99.6987 527.677 96.824C528.616 93.9493 530.024 91.368 531.901 89.08C533.779 86.7333 536.155 84.8853 539.029 83.536C541.963 82.128 545.395 81.424 549.325 81.424C554.429 81.424 558.624 82.5387 561.909 84.768C565.253 86.9387 567.717 89.7547 569.301 93.216C570.944 96.6773 571.765 100.373 571.765 104.304V108.088H530.053V101.752H565.605L563.669 105.184C563.669 101.84 563.141 98.9653 562.085 96.56C561.029 94.096 559.445 92.1893 557.333 90.84C555.221 89.4907 552.552 88.816 549.325 88.816C545.981 88.816 543.195 89.5787 540.965 91.104C538.795 92.6293 537.152 94.712 536.037 97.352C534.981 99.992 534.453 103.043 534.453 106.504C534.453 109.848 534.981 112.869 536.037 115.568C537.152 118.208 538.853 120.32 541.141 121.904C543.429 123.429 546.333 124.192 549.853 124.192C553.549 124.192 556.541 123.371 558.829 121.728C561.176 120.085 562.584 118.179 563.053 116.008H570.973C570.328 119.235 569.037 122.021 567.101 124.368C565.165 126.715 562.731 128.504 559.797 129.736C556.864 130.968 553.549 131.584 549.853 131.584Z" fill="#2B2D2E"/>
    <g filter="url(#filter0_i_622_186)">
    <rect x="37" y="70" width="144" height="100" rx="50" fill="#FBBD05"/>
    </g>
    <g filter="url(#filter1_i_622_186)">
    <rect x="37" y="30" width="144" height="100" rx="50" fill="#1D80E5"/>
    </g>
    <defs>
    <filter id="filter0_i_622_186" x="37" y="70" width="144" height="100" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
    <feFlood flood-opacity="0" result="BackgroundImageFix"/>
    <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
    <feOffset dy="-10"/>
    <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"/>
    <feBlend mode="normal" in2="shape" result="effect1_innerShadow_622_186"/>
    </filter>
    <filter id="filter1_i_622_186" x="37" y="30" width="144" height="100" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
    <feFlood flood-opacity="0" result="BackgroundImageFix"/>
    <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
    <feOffset dy="-10"/>
    <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"/>
    <feBlend mode="normal" in2="shape" result="effect1_innerShadow_622_186"/>
    </filter>
    </defs>
                        </svg>
                    </Link>
                </div>
                <div className='display gap-1rem'>
                    <Link to='/dashboard' className='display avatar-header' >
                        <img src={USER?.photoURL} className='border-r-100' width={40} height={40} />
                    </Link>
                    <button className='hamburger border-b hover border' onClick={e=> setMenu(Menu === false ? true : false)} >
                        <span className='display'>
                            <img src='/images/hamburger.svg' width={24} height={24}  />
                        </span>
                    </button>
                </div>
            </div>
            {
                Menu &&
                <div className='display justify-c m-t-2 menu'>
                    <div className='grid gap-04 w-100p'>
                        {
                            menu.map(menu=> {
                                return (
                                    <Link to={menu.link} className='w-100p' key={menu.name} onClick={e=> setMenu(false)}>
                                        <button className='h-3 hover border-r-1 '>
                                            <span className='f-s-16'>{menu.name}</span>
                                        </button>
                                    </Link>
                                )
                            })
                        }
                    </div>
                </div>
            }
        </header>
    )
}
